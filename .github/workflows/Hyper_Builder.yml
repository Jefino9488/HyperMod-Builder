name: HyperMod_Fastboot

on:
  workflow_dispatch:
    inputs:
      URL:
        description: 'Official recovery ROM'
        required: true
        type: string
      region:
        description: 'Select region'
        required: true
        type: choice
        options:
          - 'CN'
          - 'Global'
      core:
        description: 'Apply core patch'
        required: true
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'false'
      ext4:
        description: 'Create ext4 images'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: maximizeYourBuildEnvironment
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 8192
          root-reserve-mb: 4096
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: CheckOutWarehouseFiles
        uses: actions/checkout@main

      - name: Set Git user info
        run: |
          git config user.email "jefinojacob9488@gmail.com"
          git config user.name "Jefino9488"
        shell: bash

      - name: prepareTheRequiredEnvironment
        run: |
          # Extract device name from the URL
          URL="${{ github.event.inputs.URL }}"
          device_name=$(basename "$URL" | cut -d'_' -f2 | cut -d'.' -f2)
          echo "version=$(echo ${{ github.event.inputs.URL }} | cut -d'/' -f4)" >> $GITHUB_ENV
          echo "device=$device_name" >> $GITHUB_ENV
          echo "Device name: $device_name"

          echo "version=$(echo ${{ github.event.inputs.URL }} | cut -d"/" -f4)" >> $GITHUB_ENV
          sudo apt install software-properties-common
          sudo add-apt-repository universe
          sudo apt update
          sudo apt-get install python3 aria2 p7zip-full zstd dos2unix e2fsprogs android-sdk-libsparse-utils

      - name: Clone smali repository
        run: git clone --depth=1 https://github.com/JesusFreke/smali.git

      - name: Build smali and baksmali
        run: |
          ls
          cd smali
          ./gradlew build
      
      - name: Install Android SDK tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools
          yes | $HOME/android-sdk/cmdline-tools/cmdline-tools/bin/sdkmanager "build-tools;34.0.0"
          echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Check for aapt
        run: |
          if ! command -v aapt &> /dev/null; then
            echo "aapt could not be found, please check the installation of Android SDK build tools."
            exit 1
          else
            echo "aapt is installed at $(command -v aapt)"
          fi

      - name: Find aapt
        run: |
          AAPT_PATH=$(find "$HOME/android-sdk/build-tools/" -name "aapt" -type f | head -n 1)
          if [ -z "$AAPT_PATH" ]; then
            echo "aapt not found in build-tools directory."
            exit 1
          else
            echo "Found aapt at: $AAPT_PATH"
            echo "Adding aapt to PATH"
            echo "${AAPT_PATH%/*}" >> $GITHUB_PATH
          fi

      - name: Download & Unpack
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/unpack.sh ${{ github.event.inputs.URL }} ${{ env.device }} $GITHUB_WORKSPACE

      - name: Modify Product
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/product.sh ${{ env.device }} $GITHUB_WORKSPACE ${{ github.event.inputs.region }}

#      - name: Modify System
#        run: |
#          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/system.sh ${{ env.device }} $GITHUB_WORKSPACE

      - name: Modify System_ext
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/system_ext.sh ${{ env.device }} $GITHUB_WORKSPACE

      - name: Modify Vendor
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/vendor.sh ${{ env.device }} $GITHUB_WORKSPACE ${{ github.event.inputs.ext4 }}

      - name: Patch Framework
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/patch.sh ${{ env.device }} $GITHUB_WORKSPACE ${{ github.event.inputs.core }}

      - name: Patch Boot
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/patchBOOT.sh ${{ env.device }} $GITHUB_WORKSPACE

      - name: Repack
        run: |
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/repack.sh ${{ env.device }} $GITHUB_WORKSPACE ${{ github.event.inputs.ext4 }}

      - name: gofile upload
        run: |
          sudo mv ${{ github.workspace }}/zip/${{ env.device }}_fastboot.zip ${{ github.workspace }}/zip/${{ env.device }}${{ env.version }}-HyperMod-fastboot.zip
          sudo bash "$GITHUB_WORKSPACE"/Builder/scripts/upload.sh ${{ github.workspace }}/zip/${{ env.device }}${{ env.version }}-HyperMod-fastboot.zip $GITHUB_ENV

      - name: release split & info
        run: |
          mkdir -p "$GITHUB_WORKSPACE/GithubRelease"
          unzip -j "$GITHUB_WORKSPACE/zip/${{ env.device }}${{ env.version }}-HyperMod-fastboot.zip" "images/boot.img" "images/magisk_boot.img" -d "$GITHUB_WORKSPACE/GithubRelease"
          cd "$GITHUB_WORKSPACE"
          touch new_changelog.md
          echo -e "# [HyperMod v1.0.0](https://github.com/Jefino9488/HyperMod-Builder/blob/master/changelog.md)\n\n" >> new_changelog.md
          echo -e "##   TEST Build INFO\n\n- Device: ${{ env.device }}\n- Version: ${{ env.version }}\n- Region: ${{ github.event.inputs.region }}\n- Core Patch: ${{ github.event.inputs.core }}\n- Build: $([[ '${{ github.event.inputs.ext4 }}' == 'true' ]] && echo 'ext4 RW' || echo 'erofs')" >> new_changelog.md
          echo -e "\n\n## Download Link\n\n- [Download Fastboot ZIP](${{ env.DOWNLOAD_LINK }})" >> new_changelog.md

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ github.workspace }}/GithubRelease/*
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.device }}_HyperMod
          tag: ${{ env.device }}_${{ env.version }}
          bodyFile: ${{ github.workspace }}/new_changelog.md
          allowUpdates: true
          makeLatest: true

#      - name: Notify via Telegram
#        run: |
#          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
#          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
#          -d parse_mode="MarkdownV2" \
#          -d text="*Test Build*%0A%0A*Device:* \`${{ env.device }}\`%0A*Version:* \`${{ env.version }}\`%0A*Region:* \`${{ github.event.inputs.region }}\`%0A*Core Patch:* \`${{ github.event.inputs.core }}\`%0A*Build:* \`$([[ '${{ github.event.inputs.ext4 }}' == 'true' ]] && echo 'ext4 RW' || echo 'erofs')\`%0A%0A[Download Fastboot ZIP](${{ env.DOWNLOAD_LINK }})"
